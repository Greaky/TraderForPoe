<classes:NotActivatableWindow
    x:Class="TraderForPoe.WPF.Windows.MainWindow.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:p="clr-namespace:TraderForPoe.WPF.Properties" 
    xmlns:classes="clr-namespace:TraderForPoe.WPF.Classes"
    xmlns:local="clr-namespace:TraderForPoe.WPF.Controls"
    xmlns:mainWindow="clr-namespace:TraderForPoe.WPF.ViewModel.MainWindow"
    xmlns:viewModel="clr-namespace:TraderForPoe.WPF.ViewModel"
    mc:Ignorable="d"
    Title="Trade Items"
    Height="148" Width="327" 
    WindowStyle="None"
    ResizeMode="NoResize"
    Topmost="True" 
    SnapsToDevicePixels="True"
    RenderOptions.BitmapScalingMode="NearestNeighbor"
    ShowInTaskbar="False"
    Left="{Binding Source={x:Static p:Settings.Default}, Path=PosLeft, Mode=TwoWay}"
    Top="{Binding Source={x:Static p:Settings.Default}, Path=PosTop, Mode=TwoWay}"
    Background="Transparent" 
    SizeToContent="Height"
    Closing="Window_Closing"
    MouseWheel="NotActivatableWindow_MouseWheel"
    MouseDown="Window_MouseDown"
    Opacity="{Binding ControlOpacity}"
    AllowsTransparency="True"
    >
    <Window.DataContext>
        <x:Type Type="mainWindow:MainWindowViewModel" />
    </Window.DataContext>

    <Window.Resources>

        <PopupAnimation x:Key="{x:Static SystemParameters.ToolTipPopupAnimationKey}">None</PopupAnimation>

        <Style TargetType="ToolTip">
            <Setter Property="ToolTipService.InitialShowDelay" Value="1" />
            <Setter Property="ToolTipService.BetweenShowDelay" Value="0" />
            <Setter Property="ToolTipService.ShowDuration" Value="0" />
        </Style>


        <Style TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="{TemplateBinding BorderThickness}" 
                                MinHeight="25" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Background" Value="#FF5C656D"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="1"/>

            <Style.Triggers>

                <EventTrigger RoutedEvent="PreviewMouseDown">
                    <SoundPlayerAction Source="pack://application:,,,/Resources/click.wav" />
                </EventTrigger>

                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF474E55" />
                </Trigger>

                <Trigger Property="Button.IsPressed" Value="True">
                    <Setter Property="Control.Background" Value="#FF3B4046" />
                </Trigger>
            </Style.Triggers>

        </Style>

        <Style TargetType="ToggleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="{TemplateBinding BorderThickness}" 
                                MinHeight="25" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="#FF5C656D"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="1"/>

            <Style.Triggers>

                <EventTrigger RoutedEvent="PreviewMouseDown">
                    <SoundPlayerAction Source="pack://application:,,,/Resources/click.wav" />
                </EventTrigger>

                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF474E55" />
                </Trigger>

                <Trigger Property="Button.IsPressed" Value="True">
                    <Setter Property="Control.Background" Value="#FF3B4046" />
                </Trigger>

                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="#FF474E55"/>
                    <Setter Property="Content" Value="⏷"/>
                </Trigger>

                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Background" Value="#FF5C656D"/>
                    <Setter Property="Content" Value="⏶"/>
                </Trigger>
            </Style.Triggers>

        </Style>

        <Style TargetType="Button" x:Key="InlineStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0" Padding="3,0,3,0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Background" Value="#FF23272B"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="2"/>

            <Style.Triggers>

                <EventTrigger RoutedEvent="PreviewMouseDown">
                    <SoundPlayerAction Source="pack://application:,,,/Resources/click.wav" />
                </EventTrigger>

                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF474E55" />
                </Trigger>

                <Trigger Property="Button.IsPressed" Value="True">
                    <Setter Property="Control.Background" Value="#FF3B4046" />
                </Trigger>
            </Style.Triggers>

        </Style>

        <Style TargetType="{x:Type TabItem}">
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{TemplateBinding Content}" ToolTip="{TemplateBinding Content}" ></TextBlock>
                    </DataTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border x:Name="tab" Background="#FF23272B" BorderThickness="0" BorderBrush="Transparent" Padding="5,2,5,2">
                            <Grid>
                                <ContentPresenter   x:Name="contentPresenter" 
                                                    ContentSource="Header"
                                                    TextBlock.Foreground="White" 
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Left"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="tab" Property="Background" Value="#FF5C656D"/>
                                <Setter TargetName="tab" Property="BorderBrush" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="tab" Property="Background" Value="#FF23272B"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False" />
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="tab" Property="Background" Value="#FF474E55"/>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="TabControlControlTemplate1" TargetType="{x:Type TabControl}">
            <Grid x:Name="Grid" KeyboardNavigation.TabNavigation="Local">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="ColumnDefinition0" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                    <RowDefinition x:Name="RowDefinition1" Height="*" />
                </Grid.RowDefinitions>
                <Border Grid.Row="1" Grid.Column="0" Background="{TemplateBinding Background}" x:Name="Border1">
                    <ContentPresenter DataContext="{x:Null}" Margin="{TemplateBinding Padding}" x:Name="PART_SelectedContentHost" 
                                      Content="{TemplateBinding SelectedContent}" ContentTemplate="{TemplateBinding SelectedContentTemplate}" 
                                      ContentTemplateSelector="{TemplateBinding SelectedContentTemplateSelector}" ContentSource="SelectedContent" />
                </Border>
                <!--<Border Grid.Row="1" Grid.Column="0" x:Name="ContentPanel" BorderBrush="#FFD0CEBF" BorderThickness="0" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained">
                     <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                     </Border>
                     </Border>-->
                <classes:SqueezeTabPanel IsItemsHost="true" Grid.Row="0" Grid.Column="0" HorizontalAlignment="Stretch" Background="#FF5C656D"/>
            </Grid>
        </ControlTemplate>

    </Window.Resources>

    <!--<Border BorderBrush="#FF5C656D" BorderThickness="1" Name="mainBrd">-->
    <Border BorderBrush="#FF151719" BorderThickness="1" Name="MainBrd"     >
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>

            <TabControl Grid.Row="0" BorderThickness="0" Name="MainTabControl" Background="#FF23272B" Padding="1" 
                        Template="{DynamicResource TabControlControlTemplate1}" IsSynchronizedWithCurrentItem="True"
                        ItemsSource="{Binding TradeObjects}">
                <TabControl.ItemTemplate>
                    <DataTemplate>
                        <TextBlock>
                            <Run Text="{Binding Amount, Mode=OneWay}" ToolTip="{Binding Amount}"></Run>
                            <Run> x </Run>
                            <Run Text="{Binding ItemName, Mode=OneWay}" ToolTip="{Binding ItemName}"></Run>
                        </TextBlock>
                    </DataTemplate>
                </TabControl.ItemTemplate>
                <TabControl.ContentTemplate>
                    <DataTemplate DataType="viewModel:TradeObjectViewModel">

                        <StackPanel>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                </Grid.RowDefinitions>

                                <Grid Margin="3 ">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Border BorderThickness="1" BorderBrush="GreenYellow" Padding="3,2,3,2" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3" HorizontalAlignment="Left">
                                        <TextBlock TextTrimming="CharacterEllipsis" ToolTipService.InitialShowDelay="100" VerticalAlignment="Stretch" 
                                                   Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3" HorizontalAlignment="Left" Foreground="GreenYellow" 
                                                   TextWrapping="Wrap" TextDecorations="{x:Null}"  FontWeight="Bold" FontSize="14"                    >
                                            <TextBlock.ToolTip>
                                                <StackPanel>
                                                    <TextBlock FontWeight="Bold" FontSize="14" Margin="0,0,0,5"><Run Text="Open file"/></TextBlock>
                                                    <TextBlock><Run Text="Search your computer or local network"/><LineBreak /><Run Text="for a file and open it for editing."/></TextBlock>
                                                    <Border BorderBrush="Silver" BorderThickness="0,1,0,0" Margin="0,8" />
                                                    <WrapPanel>
                                                        <Image Source="pack://application:,,,/Resources/Currency/curr_chaos.png" Margin="0,0,5,0" />
                                                        <TextBlock FontStyle="Italic"><Run Text="Press F1 for more help"/></TextBlock>
                                                    </WrapPanel>
                                                </StackPanel>
                                            </TextBlock.ToolTip>
                                            <Run Text="▼ "/>
                                            <Run Text="{Binding Amount, Mode=OneWay}"/>
                                            <Run Text=" x "/>
                                            <Run Text="{Binding ItemName, Mode=OneWay}"/>
                                        </TextBlock>
                                    </Border>
                                    <WrapPanel Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2">

                                        <Button Grid.Column="1" Grid.Row="1"  HorizontalAlignment="Left" Cursor="Hand" Style="{DynamicResource InlineStyle}">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock >👤</TextBlock>
                                                <TextBlock >
                                                    <Run Text="{Binding Customer, Mode=OneWay}"/>
                                                </TextBlock>
                                            </StackPanel>
                                        </Button>
                                        <Button HorizontalAlignment="Left" Cursor="Hand" Style="{DynamicResource InlineStyle}">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock>💼</TextBlock>
                                                <TextBlock>
                                                    <Run Text=" "/>
                                                    <Run Text="{Binding Stash, Mode=OneWay}"/>
                                                    <Run Text=" "/>
                                                    <Run Text="["/>
                                                    <Run Text="{Binding Position, Mode=OneWay}"/>
                                                    <Run Text="]"/>
                                                </TextBlock>
                                            </StackPanel>
                                        </Button>
                                    </WrapPanel>
                                    <!--<StackPanel Grid.Column="1" Grid.Row="1" Orientation="Horizontal">
                                         <Button Margin="5,0,0,0" HorizontalAlignment="Left" Cursor="Hand" Style="{DynamicResource inlineStyle}">
                                         <TextBlock>Delve</TextBlock>
                                         </Button>
                                         </StackPanel>-->

                                    <Border Padding="3,2,3,2" BorderThickness="1" BorderBrush="OrangeRed" Grid.Column="2" Grid.Row="0" Grid.ColumnSpan="2" Grid.RowSpan="1" HorizontalAlignment="Right" VerticalAlignment="Center">
                                        <WrapPanel Grid.Column="2" Grid.Row="0" Grid.ColumnSpan="2" Grid.RowSpan="1" HorizontalAlignment="Right" VerticalAlignment="Center">
                                            <TextBlock TextWrapping="Wrap" Foreground="OrangeRed" FontWeight="Bold" FontSize="15" VerticalAlignment="Stretch" Margin="0,0,3,0">
                                                <Run Text="▲ 256"/>
                                                <Run Text="x"/>
                                            </TextBlock>
                                            <Image Source="pack://application:,,,/Resources/Currency/curr_ex.png" MaxHeight="20" RenderOptions.BitmapScalingMode="HighQuality" />
                                        </WrapPanel>
                                    </Border>

                                </Grid>


                            </Grid>
                            <StackPanel>
                                <UniformGrid Rows="1">
                                    <Button >
                                        <TextBlock>Invite</TextBlock>
                                    </Button>
                                    <Button>
                                        <TextBlock>Visit</TextBlock>
                                    </Button>
                                    <Button>
                                        <TextBlock>Thank</TextBlock>
                                    </Button>
                                    <Button>
                                        <TextBlock>Home</TextBlock>
                                    </Button>
                                    <Button>
                                        <TextBlock>Leave</TextBlock>
                                    </Button>
                                    <Button>
                                        <TextBlock>x</TextBlock>
                                    </Button>
                                    <Button>
                                        <TextBlock>x</TextBlock>
                                    </Button>

                                </UniformGrid>
                                <UniformGrid Rows="1">
                                    <Button>
                                        <TextBlock>Trade</TextBlock>
                                    </Button>
                                    <Button>
                                        <TextBlock>Kick</TextBlock>
                                    </Button>
                                    <Button>
                                        <TextBlock>Repeat</TextBlock>
                                    </Button>
                                    <UniformGrid Rows="1">
                                        <Button>1</Button>
                                        <Button>2</Button>
                                    </UniformGrid>
                                    <UniformGrid Rows="1">
                                        <Button>3</Button>
                                        <Button>4</Button>
                                    </UniformGrid>
                                    <UniformGrid Rows="1">
                                        <ToggleButton></ToggleButton>
                                        <Button>X</Button>
                                    </UniformGrid>
                                </UniformGrid>
                            </StackPanel>

                        </StackPanel>

                    </DataTemplate>
                </TabControl.ContentTemplate>

                <!--<TabItem Header="Test"></TabItem>-->
            </TabControl>

        </Grid>
    </Border>

</classes:NotActivatableWindow>
